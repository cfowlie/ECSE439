/**
 * generated by Xtext 2.14.0
 */
package org.xtext.bankSystem.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.bankSystem.BankSystemPackage;
import org.xtext.bankSystem.Date;
import org.xtext.bankSystem.Transaction;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Transaction</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.bankSystem.impl.TransactionImpl#getAccount <em>Account</em>}</li>
 *   <li>{@link org.xtext.bankSystem.impl.TransactionImpl#getAmount <em>Amount</em>}</li>
 *   <li>{@link org.xtext.bankSystem.impl.TransactionImpl#getDate <em>Date</em>}</li>
 *   <li>{@link org.xtext.bankSystem.impl.TransactionImpl#getDebit <em>Debit</em>}</li>
 *   <li>{@link org.xtext.bankSystem.impl.TransactionImpl#getVendorName <em>Vendor Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TransactionImpl extends MinimalEObjectImpl.Container implements Transaction
{
  /**
   * The default value of the '{@link #getAccount() <em>Account</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccount()
   * @generated
   * @ordered
   */
  protected static final String ACCOUNT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAccount() <em>Account</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccount()
   * @generated
   * @ordered
   */
  protected String account = ACCOUNT_EDEFAULT;

  /**
   * The default value of the '{@link #getAmount() <em>Amount</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAmount()
   * @generated
   * @ordered
   */
  protected static final int AMOUNT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getAmount() <em>Amount</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAmount()
   * @generated
   * @ordered
   */
  protected int amount = AMOUNT_EDEFAULT;

  /**
   * The cached value of the '{@link #getDate() <em>Date</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDate()
   * @generated
   * @ordered
   */
  protected Date date;

  /**
   * The default value of the '{@link #getDebit() <em>Debit</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDebit()
   * @generated
   * @ordered
   */
  protected static final String DEBIT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDebit() <em>Debit</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDebit()
   * @generated
   * @ordered
   */
  protected String debit = DEBIT_EDEFAULT;

  /**
   * The default value of the '{@link #getVendorName() <em>Vendor Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVendorName()
   * @generated
   * @ordered
   */
  protected static final String VENDOR_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVendorName() <em>Vendor Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVendorName()
   * @generated
   * @ordered
   */
  protected String vendorName = VENDOR_NAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TransactionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BankSystemPackage.Literals.TRANSACTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAccount()
  {
    return account;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAccount(String newAccount)
  {
    String oldAccount = account;
    account = newAccount;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BankSystemPackage.TRANSACTION__ACCOUNT, oldAccount, account));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getAmount()
  {
    return amount;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAmount(int newAmount)
  {
    int oldAmount = amount;
    amount = newAmount;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BankSystemPackage.TRANSACTION__AMOUNT, oldAmount, amount));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Date getDate()
  {
    return date;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDate(Date newDate, NotificationChain msgs)
  {
    Date oldDate = date;
    date = newDate;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BankSystemPackage.TRANSACTION__DATE, oldDate, newDate);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDate(Date newDate)
  {
    if (newDate != date)
    {
      NotificationChain msgs = null;
      if (date != null)
        msgs = ((InternalEObject)date).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BankSystemPackage.TRANSACTION__DATE, null, msgs);
      if (newDate != null)
        msgs = ((InternalEObject)newDate).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BankSystemPackage.TRANSACTION__DATE, null, msgs);
      msgs = basicSetDate(newDate, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BankSystemPackage.TRANSACTION__DATE, newDate, newDate));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDebit()
  {
    return debit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDebit(String newDebit)
  {
    String oldDebit = debit;
    debit = newDebit;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BankSystemPackage.TRANSACTION__DEBIT, oldDebit, debit));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getVendorName()
  {
    return vendorName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVendorName(String newVendorName)
  {
    String oldVendorName = vendorName;
    vendorName = newVendorName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BankSystemPackage.TRANSACTION__VENDOR_NAME, oldVendorName, vendorName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BankSystemPackage.TRANSACTION__DATE:
        return basicSetDate(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BankSystemPackage.TRANSACTION__ACCOUNT:
        return getAccount();
      case BankSystemPackage.TRANSACTION__AMOUNT:
        return getAmount();
      case BankSystemPackage.TRANSACTION__DATE:
        return getDate();
      case BankSystemPackage.TRANSACTION__DEBIT:
        return getDebit();
      case BankSystemPackage.TRANSACTION__VENDOR_NAME:
        return getVendorName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BankSystemPackage.TRANSACTION__ACCOUNT:
        setAccount((String)newValue);
        return;
      case BankSystemPackage.TRANSACTION__AMOUNT:
        setAmount((Integer)newValue);
        return;
      case BankSystemPackage.TRANSACTION__DATE:
        setDate((Date)newValue);
        return;
      case BankSystemPackage.TRANSACTION__DEBIT:
        setDebit((String)newValue);
        return;
      case BankSystemPackage.TRANSACTION__VENDOR_NAME:
        setVendorName((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BankSystemPackage.TRANSACTION__ACCOUNT:
        setAccount(ACCOUNT_EDEFAULT);
        return;
      case BankSystemPackage.TRANSACTION__AMOUNT:
        setAmount(AMOUNT_EDEFAULT);
        return;
      case BankSystemPackage.TRANSACTION__DATE:
        setDate((Date)null);
        return;
      case BankSystemPackage.TRANSACTION__DEBIT:
        setDebit(DEBIT_EDEFAULT);
        return;
      case BankSystemPackage.TRANSACTION__VENDOR_NAME:
        setVendorName(VENDOR_NAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BankSystemPackage.TRANSACTION__ACCOUNT:
        return ACCOUNT_EDEFAULT == null ? account != null : !ACCOUNT_EDEFAULT.equals(account);
      case BankSystemPackage.TRANSACTION__AMOUNT:
        return amount != AMOUNT_EDEFAULT;
      case BankSystemPackage.TRANSACTION__DATE:
        return date != null;
      case BankSystemPackage.TRANSACTION__DEBIT:
        return DEBIT_EDEFAULT == null ? debit != null : !DEBIT_EDEFAULT.equals(debit);
      case BankSystemPackage.TRANSACTION__VENDOR_NAME:
        return VENDOR_NAME_EDEFAULT == null ? vendorName != null : !VENDOR_NAME_EDEFAULT.equals(vendorName);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (account: ");
    result.append(account);
    result.append(", amount: ");
    result.append(amount);
    result.append(", debit: ");
    result.append(debit);
    result.append(", vendorName: ");
    result.append(vendorName);
    result.append(')');
    return result.toString();
  }

} //TransactionImpl
