/**
 * generated by Xtext 2.14.0
 */
package org.xtext.bankSystem.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.bankSystem.Account;
import org.xtext.bankSystem.BankSystemPackage;
import org.xtext.bankSystem.User;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Account</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.bankSystem.impl.AccountImpl#getHolder <em>Holder</em>}</li>
 *   <li>{@link org.xtext.bankSystem.impl.AccountImpl#getBalance <em>Balance</em>}</li>
 *   <li>{@link org.xtext.bankSystem.impl.AccountImpl#getAccountNum <em>Account Num</em>}</li>
 *   <li>{@link org.xtext.bankSystem.impl.AccountImpl#getMfaType <em>Mfa Type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AccountImpl extends MinimalEObjectImpl.Container implements Account
{
  /**
   * The cached value of the '{@link #getHolder() <em>Holder</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHolder()
   * @generated
   * @ordered
   */
  protected User holder;

  /**
   * The default value of the '{@link #getBalance() <em>Balance</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBalance()
   * @generated
   * @ordered
   */
  protected static final int BALANCE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getBalance() <em>Balance</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBalance()
   * @generated
   * @ordered
   */
  protected int balance = BALANCE_EDEFAULT;

  /**
   * The default value of the '{@link #getAccountNum() <em>Account Num</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccountNum()
   * @generated
   * @ordered
   */
  protected static final String ACCOUNT_NUM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAccountNum() <em>Account Num</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccountNum()
   * @generated
   * @ordered
   */
  protected String accountNum = ACCOUNT_NUM_EDEFAULT;

  /**
   * The default value of the '{@link #getMfaType() <em>Mfa Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMfaType()
   * @generated
   * @ordered
   */
  protected static final String MFA_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMfaType() <em>Mfa Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMfaType()
   * @generated
   * @ordered
   */
  protected String mfaType = MFA_TYPE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AccountImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BankSystemPackage.Literals.ACCOUNT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public User getHolder()
  {
    return holder;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetHolder(User newHolder, NotificationChain msgs)
  {
    User oldHolder = holder;
    holder = newHolder;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BankSystemPackage.ACCOUNT__HOLDER, oldHolder, newHolder);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHolder(User newHolder)
  {
    if (newHolder != holder)
    {
      NotificationChain msgs = null;
      if (holder != null)
        msgs = ((InternalEObject)holder).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BankSystemPackage.ACCOUNT__HOLDER, null, msgs);
      if (newHolder != null)
        msgs = ((InternalEObject)newHolder).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BankSystemPackage.ACCOUNT__HOLDER, null, msgs);
      msgs = basicSetHolder(newHolder, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BankSystemPackage.ACCOUNT__HOLDER, newHolder, newHolder));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getBalance()
  {
    return balance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBalance(int newBalance)
  {
    int oldBalance = balance;
    balance = newBalance;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BankSystemPackage.ACCOUNT__BALANCE, oldBalance, balance));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAccountNum()
  {
    return accountNum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAccountNum(String newAccountNum)
  {
    String oldAccountNum = accountNum;
    accountNum = newAccountNum;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BankSystemPackage.ACCOUNT__ACCOUNT_NUM, oldAccountNum, accountNum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMfaType()
  {
    return mfaType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMfaType(String newMfaType)
  {
    String oldMfaType = mfaType;
    mfaType = newMfaType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BankSystemPackage.ACCOUNT__MFA_TYPE, oldMfaType, mfaType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BankSystemPackage.ACCOUNT__HOLDER:
        return basicSetHolder(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BankSystemPackage.ACCOUNT__HOLDER:
        return getHolder();
      case BankSystemPackage.ACCOUNT__BALANCE:
        return getBalance();
      case BankSystemPackage.ACCOUNT__ACCOUNT_NUM:
        return getAccountNum();
      case BankSystemPackage.ACCOUNT__MFA_TYPE:
        return getMfaType();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BankSystemPackage.ACCOUNT__HOLDER:
        setHolder((User)newValue);
        return;
      case BankSystemPackage.ACCOUNT__BALANCE:
        setBalance((Integer)newValue);
        return;
      case BankSystemPackage.ACCOUNT__ACCOUNT_NUM:
        setAccountNum((String)newValue);
        return;
      case BankSystemPackage.ACCOUNT__MFA_TYPE:
        setMfaType((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BankSystemPackage.ACCOUNT__HOLDER:
        setHolder((User)null);
        return;
      case BankSystemPackage.ACCOUNT__BALANCE:
        setBalance(BALANCE_EDEFAULT);
        return;
      case BankSystemPackage.ACCOUNT__ACCOUNT_NUM:
        setAccountNum(ACCOUNT_NUM_EDEFAULT);
        return;
      case BankSystemPackage.ACCOUNT__MFA_TYPE:
        setMfaType(MFA_TYPE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BankSystemPackage.ACCOUNT__HOLDER:
        return holder != null;
      case BankSystemPackage.ACCOUNT__BALANCE:
        return balance != BALANCE_EDEFAULT;
      case BankSystemPackage.ACCOUNT__ACCOUNT_NUM:
        return ACCOUNT_NUM_EDEFAULT == null ? accountNum != null : !ACCOUNT_NUM_EDEFAULT.equals(accountNum);
      case BankSystemPackage.ACCOUNT__MFA_TYPE:
        return MFA_TYPE_EDEFAULT == null ? mfaType != null : !MFA_TYPE_EDEFAULT.equals(mfaType);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (balance: ");
    result.append(balance);
    result.append(", accountNum: ");
    result.append(accountNum);
    result.append(", mfaType: ");
    result.append(mfaType);
    result.append(')');
    return result.toString();
  }

} //AccountImpl
