/**
 * generated by Xtext 2.14.0
 */
package org.xtext.bankSystem.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.bankSystem.Bank;
import org.xtext.bankSystem.BankSystem;
import org.xtext.bankSystem.BankSystemPackage;
import org.xtext.bankSystem.User;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Bank System</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.bankSystem.impl.BankSystemImpl#getBanks <em>Banks</em>}</li>
 *   <li>{@link org.xtext.bankSystem.impl.BankSystemImpl#getUsers <em>Users</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BankSystemImpl extends MinimalEObjectImpl.Container implements BankSystem
{
  /**
   * The cached value of the '{@link #getBanks() <em>Banks</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBanks()
   * @generated
   * @ordered
   */
  protected EList<Bank> banks;

  /**
   * The cached value of the '{@link #getUsers() <em>Users</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUsers()
   * @generated
   * @ordered
   */
  protected EList<User> users;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BankSystemImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BankSystemPackage.Literals.BANK_SYSTEM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Bank> getBanks()
  {
    if (banks == null)
    {
      banks = new EObjectContainmentEList<Bank>(Bank.class, this, BankSystemPackage.BANK_SYSTEM__BANKS);
    }
    return banks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<User> getUsers()
  {
    if (users == null)
    {
      users = new EObjectContainmentEList<User>(User.class, this, BankSystemPackage.BANK_SYSTEM__USERS);
    }
    return users;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BankSystemPackage.BANK_SYSTEM__BANKS:
        return ((InternalEList<?>)getBanks()).basicRemove(otherEnd, msgs);
      case BankSystemPackage.BANK_SYSTEM__USERS:
        return ((InternalEList<?>)getUsers()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BankSystemPackage.BANK_SYSTEM__BANKS:
        return getBanks();
      case BankSystemPackage.BANK_SYSTEM__USERS:
        return getUsers();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BankSystemPackage.BANK_SYSTEM__BANKS:
        getBanks().clear();
        getBanks().addAll((Collection<? extends Bank>)newValue);
        return;
      case BankSystemPackage.BANK_SYSTEM__USERS:
        getUsers().clear();
        getUsers().addAll((Collection<? extends User>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BankSystemPackage.BANK_SYSTEM__BANKS:
        getBanks().clear();
        return;
      case BankSystemPackage.BANK_SYSTEM__USERS:
        getUsers().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BankSystemPackage.BANK_SYSTEM__BANKS:
        return banks != null && !banks.isEmpty();
      case BankSystemPackage.BANK_SYSTEM__USERS:
        return users != null && !users.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //BankSystemImpl
