/**
 * generated by Xtext 2.14.0
 */
package org.xtext.bankSystem.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.bankSystem.BankSystemPackage;
import org.xtext.bankSystem.Branch;
import org.xtext.bankSystem.Employee;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Branch</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.bankSystem.impl.BranchImpl#getAddress <em>Address</em>}</li>
 *   <li>{@link org.xtext.bankSystem.impl.BranchImpl#getMybooth <em>Mybooth</em>}</li>
 *   <li>{@link org.xtext.bankSystem.impl.BranchImpl#getMyVault <em>My Vault</em>}</li>
 *   <li>{@link org.xtext.bankSystem.impl.BranchImpl#getEmployees <em>Employees</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BranchImpl extends MinimalEObjectImpl.Container implements Branch
{
  /**
   * The default value of the '{@link #getAddress() <em>Address</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAddress()
   * @generated
   * @ordered
   */
  protected static final String ADDRESS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAddress() <em>Address</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAddress()
   * @generated
   * @ordered
   */
  protected String address = ADDRESS_EDEFAULT;

  /**
   * The default value of the '{@link #getMybooth() <em>Mybooth</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMybooth()
   * @generated
   * @ordered
   */
  protected static final String MYBOOTH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMybooth() <em>Mybooth</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMybooth()
   * @generated
   * @ordered
   */
  protected String mybooth = MYBOOTH_EDEFAULT;

  /**
   * The default value of the '{@link #getMyVault() <em>My Vault</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMyVault()
   * @generated
   * @ordered
   */
  protected static final String MY_VAULT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMyVault() <em>My Vault</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMyVault()
   * @generated
   * @ordered
   */
  protected String myVault = MY_VAULT_EDEFAULT;

  /**
   * The cached value of the '{@link #getEmployees() <em>Employees</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEmployees()
   * @generated
   * @ordered
   */
  protected EList<Employee> employees;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BranchImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BankSystemPackage.Literals.BRANCH;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAddress()
  {
    return address;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAddress(String newAddress)
  {
    String oldAddress = address;
    address = newAddress;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BankSystemPackage.BRANCH__ADDRESS, oldAddress, address));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMybooth()
  {
    return mybooth;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMybooth(String newMybooth)
  {
    String oldMybooth = mybooth;
    mybooth = newMybooth;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BankSystemPackage.BRANCH__MYBOOTH, oldMybooth, mybooth));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMyVault()
  {
    return myVault;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMyVault(String newMyVault)
  {
    String oldMyVault = myVault;
    myVault = newMyVault;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BankSystemPackage.BRANCH__MY_VAULT, oldMyVault, myVault));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Employee> getEmployees()
  {
    if (employees == null)
    {
      employees = new EObjectContainmentEList<Employee>(Employee.class, this, BankSystemPackage.BRANCH__EMPLOYEES);
    }
    return employees;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BankSystemPackage.BRANCH__EMPLOYEES:
        return ((InternalEList<?>)getEmployees()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BankSystemPackage.BRANCH__ADDRESS:
        return getAddress();
      case BankSystemPackage.BRANCH__MYBOOTH:
        return getMybooth();
      case BankSystemPackage.BRANCH__MY_VAULT:
        return getMyVault();
      case BankSystemPackage.BRANCH__EMPLOYEES:
        return getEmployees();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BankSystemPackage.BRANCH__ADDRESS:
        setAddress((String)newValue);
        return;
      case BankSystemPackage.BRANCH__MYBOOTH:
        setMybooth((String)newValue);
        return;
      case BankSystemPackage.BRANCH__MY_VAULT:
        setMyVault((String)newValue);
        return;
      case BankSystemPackage.BRANCH__EMPLOYEES:
        getEmployees().clear();
        getEmployees().addAll((Collection<? extends Employee>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BankSystemPackage.BRANCH__ADDRESS:
        setAddress(ADDRESS_EDEFAULT);
        return;
      case BankSystemPackage.BRANCH__MYBOOTH:
        setMybooth(MYBOOTH_EDEFAULT);
        return;
      case BankSystemPackage.BRANCH__MY_VAULT:
        setMyVault(MY_VAULT_EDEFAULT);
        return;
      case BankSystemPackage.BRANCH__EMPLOYEES:
        getEmployees().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BankSystemPackage.BRANCH__ADDRESS:
        return ADDRESS_EDEFAULT == null ? address != null : !ADDRESS_EDEFAULT.equals(address);
      case BankSystemPackage.BRANCH__MYBOOTH:
        return MYBOOTH_EDEFAULT == null ? mybooth != null : !MYBOOTH_EDEFAULT.equals(mybooth);
      case BankSystemPackage.BRANCH__MY_VAULT:
        return MY_VAULT_EDEFAULT == null ? myVault != null : !MY_VAULT_EDEFAULT.equals(myVault);
      case BankSystemPackage.BRANCH__EMPLOYEES:
        return employees != null && !employees.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (address: ");
    result.append(address);
    result.append(", mybooth: ");
    result.append(mybooth);
    result.append(", myVault: ");
    result.append(myVault);
    result.append(')');
    return result.toString();
  }

} //BranchImpl
