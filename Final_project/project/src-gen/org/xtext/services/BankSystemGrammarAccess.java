/*
 * generated by Xtext 2.14.0
 */
package org.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class BankSystemGrammarAccess extends AbstractGrammarElementFinder {
	
	public class BankSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.BankSystem.BankSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cBanksAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cBanksBankParserRuleCall_0_0 = (RuleCall)cBanksAssignment_0.eContents().get(0);
		private final Assignment cUsersAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cUsersUserParserRuleCall_1_0 = (RuleCall)cUsersAssignment_1.eContents().get(0);
		
		//BankSystem:
		//	banks+=Bank+
		//	users+=User+;
		@Override public ParserRule getRule() { return rule; }
		
		//banks+=Bank+ users+=User+
		public Group getGroup() { return cGroup; }
		
		//banks+=Bank+
		public Assignment getBanksAssignment_0() { return cBanksAssignment_0; }
		
		//Bank
		public RuleCall getBanksBankParserRuleCall_0_0() { return cBanksBankParserRuleCall_0_0; }
		
		//users+=User+
		public Assignment getUsersAssignment_1() { return cUsersAssignment_1; }
		
		//User
		public RuleCall getUsersUserParserRuleCall_1_0() { return cUsersUserParserRuleCall_1_0; }
	}
	public class BankElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.BankSystem.Bank");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBankKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCountryKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cCountryOfOriginAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCountryOfOriginSTRINGTerminalRuleCall_4_0 = (RuleCall)cCountryOfOriginAssignment_4.eContents().get(0);
		private final Assignment cBranchesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBranchesBranchParserRuleCall_5_0 = (RuleCall)cBranchesAssignment_5.eContents().get(0);
		private final Assignment cAccountsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAccountsAccountParserRuleCall_6_0 = (RuleCall)cAccountsAssignment_6.eContents().get(0);
		private final Assignment cTransactionsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTransactionsTransactionParserRuleCall_7_0 = (RuleCall)cTransactionsAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Bank:
		//	'Bank' name=ID
		//	'{'
		//	'Country' countryOfOrigin=STRING
		//	branches+=Branch+
		//	accounts+=Account*
		//	transactions+=Transaction*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Bank' name=ID '{' 'Country' countryOfOrigin=STRING branches+=Branch+ accounts+=Account* transactions+=Transaction* '}'
		public Group getGroup() { return cGroup; }
		
		//'Bank'
		public Keyword getBankKeyword_0() { return cBankKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'Country'
		public Keyword getCountryKeyword_3() { return cCountryKeyword_3; }
		
		//countryOfOrigin=STRING
		public Assignment getCountryOfOriginAssignment_4() { return cCountryOfOriginAssignment_4; }
		
		//STRING
		public RuleCall getCountryOfOriginSTRINGTerminalRuleCall_4_0() { return cCountryOfOriginSTRINGTerminalRuleCall_4_0; }
		
		//branches+=Branch+
		public Assignment getBranchesAssignment_5() { return cBranchesAssignment_5; }
		
		//Branch
		public RuleCall getBranchesBranchParserRuleCall_5_0() { return cBranchesBranchParserRuleCall_5_0; }
		
		//accounts+=Account*
		public Assignment getAccountsAssignment_6() { return cAccountsAssignment_6; }
		
		//Account
		public RuleCall getAccountsAccountParserRuleCall_6_0() { return cAccountsAccountParserRuleCall_6_0; }
		
		//transactions+=Transaction*
		public Assignment getTransactionsAssignment_7() { return cTransactionsAssignment_7; }
		
		//Transaction
		public RuleCall getTransactionsTransactionParserRuleCall_7_0() { return cTransactionsTransactionParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class UserElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.BankSystem.User");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUserKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cEmailKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEmailAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEmailSTRINGTerminalRuleCall_5_0 = (RuleCall)cEmailAssignment_5.eContents().get(0);
		private final Keyword cHashPassKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cHashpassAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cHashpassSTRINGTerminalRuleCall_7_0 = (RuleCall)cHashpassAssignment_7.eContents().get(0);
		private final Keyword cAddressKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cAddressAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cAddressSTRINGTerminalRuleCall_9_0 = (RuleCall)cAddressAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//User:
		//	'User' '{'
		//	'Name' name=ID
		//	'Email' email=STRING
		//	'HashPass' hashpass=STRING
		//	'Address' address=STRING
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'User' '{' 'Name' name=ID 'Email' email=STRING 'HashPass' hashpass=STRING 'Address' address=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'User'
		public Keyword getUserKeyword_0() { return cUserKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'Name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//'Email'
		public Keyword getEmailKeyword_4() { return cEmailKeyword_4; }
		
		//email=STRING
		public Assignment getEmailAssignment_5() { return cEmailAssignment_5; }
		
		//STRING
		public RuleCall getEmailSTRINGTerminalRuleCall_5_0() { return cEmailSTRINGTerminalRuleCall_5_0; }
		
		//'HashPass'
		public Keyword getHashPassKeyword_6() { return cHashPassKeyword_6; }
		
		//hashpass=STRING
		public Assignment getHashpassAssignment_7() { return cHashpassAssignment_7; }
		
		//STRING
		public RuleCall getHashpassSTRINGTerminalRuleCall_7_0() { return cHashpassSTRINGTerminalRuleCall_7_0; }
		
		//'Address'
		public Keyword getAddressKeyword_8() { return cAddressKeyword_8; }
		
		//address=STRING
		public Assignment getAddressAssignment_9() { return cAddressAssignment_9; }
		
		//STRING
		public RuleCall getAddressSTRINGTerminalRuleCall_9_0() { return cAddressSTRINGTerminalRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class BranchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.BankSystem.Branch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBranchKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAddressKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAddressAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAddressSTRINGTerminalRuleCall_2_0 = (RuleCall)cAddressAssignment_2.eContents().get(0);
		private final Assignment cMyboothAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMyboothBoothParserRuleCall_3_0 = (RuleCall)cMyboothAssignment_3.eContents().get(0);
		private final Assignment cMyVaultAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMyVaultVaultParserRuleCall_4_0 = (RuleCall)cMyVaultAssignment_4.eContents().get(0);
		private final Assignment cEmployeesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEmployeesEmployeeParserRuleCall_5_0 = (RuleCall)cEmployeesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Branch:
		//	'Branch{'
		//	'Address' address=STRING
		//	mybooth=Booth?
		//	myVault=Vault?
		//	employees+=Employee+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Branch{' 'Address' address=STRING mybooth=Booth? myVault=Vault? employees+=Employee+ '}'
		public Group getGroup() { return cGroup; }
		
		//'Branch{'
		public Keyword getBranchKeyword_0() { return cBranchKeyword_0; }
		
		//'Address'
		public Keyword getAddressKeyword_1() { return cAddressKeyword_1; }
		
		//address=STRING
		public Assignment getAddressAssignment_2() { return cAddressAssignment_2; }
		
		//STRING
		public RuleCall getAddressSTRINGTerminalRuleCall_2_0() { return cAddressSTRINGTerminalRuleCall_2_0; }
		
		//mybooth=Booth?
		public Assignment getMyboothAssignment_3() { return cMyboothAssignment_3; }
		
		//Booth
		public RuleCall getMyboothBoothParserRuleCall_3_0() { return cMyboothBoothParserRuleCall_3_0; }
		
		//myVault=Vault?
		public Assignment getMyVaultAssignment_4() { return cMyVaultAssignment_4; }
		
		//Vault
		public RuleCall getMyVaultVaultParserRuleCall_4_0() { return cMyVaultVaultParserRuleCall_4_0; }
		
		//employees+=Employee+
		public Assignment getEmployeesAssignment_5() { return cEmployeesAssignment_5; }
		
		//Employee
		public RuleCall getEmployeesEmployeeParserRuleCall_5_0() { return cEmployeesEmployeeParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class BoothElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.BankSystem.Booth");
		private final Keyword cBoothKeyword = (Keyword)rule.eContents().get(1);
		
		//Booth:
		//	'Booth';
		@Override public ParserRule getRule() { return rule; }
		
		//'Booth'
		public Keyword getBoothKeyword() { return cBoothKeyword; }
	}
	public class VaultElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.BankSystem.Vault");
		private final Keyword cVaultKeyword = (Keyword)rule.eContents().get(1);
		
		//Vault:
		//	'Vault';
		@Override public ParserRule getRule() { return rule; }
		
		//'Vault'
		public Keyword getVaultKeyword() { return cVaultKeyword; }
	}
	public class EmployeeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.BankSystem.Employee");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEmployeeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cHiringDateKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDateAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDateDateParserRuleCall_4_0 = (RuleCall)cDateAssignment_4.eContents().get(0);
		private final Keyword cSalaryKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSalaryAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSalaryINTTerminalRuleCall_6_0 = (RuleCall)cSalaryAssignment_6.eContents().get(0);
		private final Keyword cCurrentRoleKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cCurrentRoleAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cCurrentRoleEmployeeRoleParserRuleCall_8_0 = (RuleCall)cCurrentRoleAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Employee:
		//	'Employee' name=ID '{'
		//	'Hiring date' date=Date
		//	'Salary' salary=INT
		//	'Current Role' currentRole=EmployeeRole
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Employee' name=ID '{' 'Hiring date' date=Date 'Salary' salary=INT 'Current Role' currentRole=EmployeeRole '}'
		public Group getGroup() { return cGroup; }
		
		//'Employee'
		public Keyword getEmployeeKeyword_0() { return cEmployeeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'Hiring date'
		public Keyword getHiringDateKeyword_3() { return cHiringDateKeyword_3; }
		
		//date=Date
		public Assignment getDateAssignment_4() { return cDateAssignment_4; }
		
		//Date
		public RuleCall getDateDateParserRuleCall_4_0() { return cDateDateParserRuleCall_4_0; }
		
		//'Salary'
		public Keyword getSalaryKeyword_5() { return cSalaryKeyword_5; }
		
		//salary=INT
		public Assignment getSalaryAssignment_6() { return cSalaryAssignment_6; }
		
		//INT
		public RuleCall getSalaryINTTerminalRuleCall_6_0() { return cSalaryINTTerminalRuleCall_6_0; }
		
		//'Current Role'
		public Keyword getCurrentRoleKeyword_7() { return cCurrentRoleKeyword_7; }
		
		//currentRole=EmployeeRole
		public Assignment getCurrentRoleAssignment_8() { return cCurrentRoleAssignment_8; }
		
		//EmployeeRole
		public RuleCall getCurrentRoleEmployeeRoleParserRuleCall_8_0() { return cCurrentRoleEmployeeRoleParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class EmployeeRoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.BankSystem.EmployeeRole");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTellerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cManagerParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EmployeeRole:
		//	Teller | Manager;
		@Override public ParserRule getRule() { return rule; }
		
		//Teller | Manager
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Teller
		public RuleCall getTellerParserRuleCall_0() { return cTellerParserRuleCall_0; }
		
		//Manager
		public RuleCall getManagerParserRuleCall_1() { return cManagerParserRuleCall_1; }
	}
	public class TellerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.BankSystem.Teller");
		private final Keyword cTellerKeyword = (Keyword)rule.eContents().get(1);
		
		//Teller:
		//	'Teller';
		@Override public ParserRule getRule() { return rule; }
		
		//'Teller'
		public Keyword getTellerKeyword() { return cTellerKeyword; }
	}
	public class ManagerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.BankSystem.Manager");
		private final Keyword cManagerKeyword = (Keyword)rule.eContents().get(1);
		
		//Manager:
		//	'Manager';
		@Override public ParserRule getRule() { return rule; }
		
		//'Manager'
		public Keyword getManagerKeyword() { return cManagerKeyword; }
	}
	public class AccountElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.BankSystem.Account");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAccountKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAccountNumAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAccountNumIDTerminalRuleCall_1_0 = (RuleCall)cAccountNumAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cHolderSKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cHolderAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cHolderIDTerminalRuleCall_4_0 = (RuleCall)cHolderAssignment_4.eContents().get(0);
		private final Keyword cBalanceKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cBalanceAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cBalanceINTTerminalRuleCall_6_0 = (RuleCall)cBalanceAssignment_6.eContents().get(0);
		private final Keyword cAccountNumberKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cMFATypeKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cMfaTypeAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cMfaTypeSTRINGTerminalRuleCall_9_0 = (RuleCall)cMfaTypeAssignment_9.eContents().get(0);
		private final Keyword cTypeKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cAccountTypeAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cAccountTypeAccountTypeParserRuleCall_11_0 = (RuleCall)cAccountTypeAssignment_11.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cInterestRateKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cIntRateAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cIntRateINTTerminalRuleCall_12_1_0 = (RuleCall)cIntRateAssignment_12_1.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cDebitsPerMonthKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cDepPerMonthAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cDepPerMonthINTTerminalRuleCall_13_1_0 = (RuleCall)cDepPerMonthAssignment_13_1.eContents().get(0);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cLoanPeriodKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Assignment cLoanPeriodAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cLoanPeriodSTRINGTerminalRuleCall_14_1_0 = (RuleCall)cLoanPeriodAssignment_14_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//Account:
		//	'account' accountNum=ID '{'
		//	'Holder(s)' holder=ID
		//	'Balance' balance=INT
		//	'Account Number'
		//	'MFA Type' mfaType=STRING
		//	'Type' accountType=AccountType ('Interest rate' intRate=INT)? ('Debits per month' depPerMonth=INT)? ('Loan period'
		//	loanPeriod=STRING)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'account' accountNum=ID '{' 'Holder(s)' holder=ID 'Balance' balance=INT 'Account Number' 'MFA Type' mfaType=STRING
		//'Type' accountType=AccountType ('Interest rate' intRate=INT)? ('Debits per month' depPerMonth=INT)? ('Loan period'
		//loanPeriod=STRING)? '}'
		public Group getGroup() { return cGroup; }
		
		//'account'
		public Keyword getAccountKeyword_0() { return cAccountKeyword_0; }
		
		//accountNum=ID
		public Assignment getAccountNumAssignment_1() { return cAccountNumAssignment_1; }
		
		//ID
		public RuleCall getAccountNumIDTerminalRuleCall_1_0() { return cAccountNumIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'Holder(s)'
		public Keyword getHolderSKeyword_3() { return cHolderSKeyword_3; }
		
		//holder=ID
		public Assignment getHolderAssignment_4() { return cHolderAssignment_4; }
		
		//ID
		public RuleCall getHolderIDTerminalRuleCall_4_0() { return cHolderIDTerminalRuleCall_4_0; }
		
		//'Balance'
		public Keyword getBalanceKeyword_5() { return cBalanceKeyword_5; }
		
		//balance=INT
		public Assignment getBalanceAssignment_6() { return cBalanceAssignment_6; }
		
		//INT
		public RuleCall getBalanceINTTerminalRuleCall_6_0() { return cBalanceINTTerminalRuleCall_6_0; }
		
		//'Account Number'
		public Keyword getAccountNumberKeyword_7() { return cAccountNumberKeyword_7; }
		
		//'MFA Type'
		public Keyword getMFATypeKeyword_8() { return cMFATypeKeyword_8; }
		
		//mfaType=STRING
		public Assignment getMfaTypeAssignment_9() { return cMfaTypeAssignment_9; }
		
		//STRING
		public RuleCall getMfaTypeSTRINGTerminalRuleCall_9_0() { return cMfaTypeSTRINGTerminalRuleCall_9_0; }
		
		//'Type'
		public Keyword getTypeKeyword_10() { return cTypeKeyword_10; }
		
		//accountType=AccountType
		public Assignment getAccountTypeAssignment_11() { return cAccountTypeAssignment_11; }
		
		//AccountType
		public RuleCall getAccountTypeAccountTypeParserRuleCall_11_0() { return cAccountTypeAccountTypeParserRuleCall_11_0; }
		
		//('Interest rate' intRate=INT)?
		public Group getGroup_12() { return cGroup_12; }
		
		//'Interest rate'
		public Keyword getInterestRateKeyword_12_0() { return cInterestRateKeyword_12_0; }
		
		//intRate=INT
		public Assignment getIntRateAssignment_12_1() { return cIntRateAssignment_12_1; }
		
		//INT
		public RuleCall getIntRateINTTerminalRuleCall_12_1_0() { return cIntRateINTTerminalRuleCall_12_1_0; }
		
		//('Debits per month' depPerMonth=INT)?
		public Group getGroup_13() { return cGroup_13; }
		
		//'Debits per month'
		public Keyword getDebitsPerMonthKeyword_13_0() { return cDebitsPerMonthKeyword_13_0; }
		
		//depPerMonth=INT
		public Assignment getDepPerMonthAssignment_13_1() { return cDepPerMonthAssignment_13_1; }
		
		//INT
		public RuleCall getDepPerMonthINTTerminalRuleCall_13_1_0() { return cDepPerMonthINTTerminalRuleCall_13_1_0; }
		
		//('Loan period' loanPeriod=STRING)?
		public Group getGroup_14() { return cGroup_14; }
		
		//'Loan period'
		public Keyword getLoanPeriodKeyword_14_0() { return cLoanPeriodKeyword_14_0; }
		
		//loanPeriod=STRING
		public Assignment getLoanPeriodAssignment_14_1() { return cLoanPeriodAssignment_14_1; }
		
		//STRING
		public RuleCall getLoanPeriodSTRINGTerminalRuleCall_14_1_0() { return cLoanPeriodSTRINGTerminalRuleCall_14_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
	}
	public class AccountTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.BankSystem.AccountType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSavingsAccountParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCheckingAccountParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMortgageAccountParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//AccountType:
		//	SavingsAccount | CheckingAccount | MortgageAccount;
		@Override public ParserRule getRule() { return rule; }
		
		//SavingsAccount | CheckingAccount | MortgageAccount
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SavingsAccount
		public RuleCall getSavingsAccountParserRuleCall_0() { return cSavingsAccountParserRuleCall_0; }
		
		//CheckingAccount
		public RuleCall getCheckingAccountParserRuleCall_1() { return cCheckingAccountParserRuleCall_1; }
		
		//MortgageAccount
		public RuleCall getMortgageAccountParserRuleCall_2() { return cMortgageAccountParserRuleCall_2; }
	}
	public class SavingsAccountElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.BankSystem.SavingsAccount");
		private final Keyword cSavingsAccountKeyword = (Keyword)rule.eContents().get(1);
		
		//SavingsAccount:
		//	'Savings Account';
		@Override public ParserRule getRule() { return rule; }
		
		//'Savings Account'
		public Keyword getSavingsAccountKeyword() { return cSavingsAccountKeyword; }
	}
	public class CheckingAccountElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.BankSystem.CheckingAccount");
		private final Keyword cCheckingAccountKeyword = (Keyword)rule.eContents().get(1);
		
		//CheckingAccount:
		//	'Checking Account';
		@Override public ParserRule getRule() { return rule; }
		
		//'Checking Account'
		public Keyword getCheckingAccountKeyword() { return cCheckingAccountKeyword; }
	}
	public class MortgageAccountElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.BankSystem.MortgageAccount");
		private final Keyword cMortgageAccountKeyword = (Keyword)rule.eContents().get(1);
		
		//MortgageAccount:
		//	'Mortgage Account';
		@Override public ParserRule getRule() { return rule; }
		
		//'Mortgage Account'
		public Keyword getMortgageAccountKeyword() { return cMortgageAccountKeyword; }
	}
	public class TransactionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.BankSystem.Transaction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransactionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAccountKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAccountAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAccountIDTerminalRuleCall_2_0 = (RuleCall)cAccountAssignment_2.eContents().get(0);
		private final Keyword cAmountKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAmountAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAmountINTTerminalRuleCall_4_0 = (RuleCall)cAmountAssignment_4.eContents().get(0);
		private final Keyword cDateKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDateAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDateDateParserRuleCall_6_0 = (RuleCall)cDateAssignment_6.eContents().get(0);
		private final Keyword cDebitKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cDebitAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDebitBooleanParserRuleCall_8_0 = (RuleCall)cDebitAssignment_8.eContents().get(0);
		private final Keyword cVendorNameKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cVendorNameAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cVendorNameSTRINGTerminalRuleCall_10_0 = (RuleCall)cVendorNameAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Transaction:
		//	'transaction {'
		//	'Account:' account=ID
		//	'Amount:' amount=INT
		//	'Date' date=Date
		//	'Debit' debit=Boolean
		//	'Vendor name' vendorName=STRING
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'transaction {' 'Account:' account=ID 'Amount:' amount=INT 'Date' date=Date 'Debit' debit=Boolean 'Vendor name'
		//vendorName=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'transaction {'
		public Keyword getTransactionKeyword_0() { return cTransactionKeyword_0; }
		
		//'Account:'
		public Keyword getAccountKeyword_1() { return cAccountKeyword_1; }
		
		//account=ID
		public Assignment getAccountAssignment_2() { return cAccountAssignment_2; }
		
		//ID
		public RuleCall getAccountIDTerminalRuleCall_2_0() { return cAccountIDTerminalRuleCall_2_0; }
		
		//'Amount:'
		public Keyword getAmountKeyword_3() { return cAmountKeyword_3; }
		
		//amount=INT
		public Assignment getAmountAssignment_4() { return cAmountAssignment_4; }
		
		//INT
		public RuleCall getAmountINTTerminalRuleCall_4_0() { return cAmountINTTerminalRuleCall_4_0; }
		
		//'Date'
		public Keyword getDateKeyword_5() { return cDateKeyword_5; }
		
		//date=Date
		public Assignment getDateAssignment_6() { return cDateAssignment_6; }
		
		//Date
		public RuleCall getDateDateParserRuleCall_6_0() { return cDateDateParserRuleCall_6_0; }
		
		//'Debit'
		public Keyword getDebitKeyword_7() { return cDebitKeyword_7; }
		
		//debit=Boolean
		public Assignment getDebitAssignment_8() { return cDebitAssignment_8; }
		
		//Boolean
		public RuleCall getDebitBooleanParserRuleCall_8_0() { return cDebitBooleanParserRuleCall_8_0; }
		
		//'Vendor name'
		public Keyword getVendorNameKeyword_9() { return cVendorNameKeyword_9; }
		
		//vendorName=STRING
		public Assignment getVendorNameAssignment_10() { return cVendorNameAssignment_10; }
		
		//STRING
		public RuleCall getVendorNameSTRINGTerminalRuleCall_10_0() { return cVendorNameSTRINGTerminalRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class BooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.BankSystem.Boolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//Boolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class DateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.BankSystem.Date");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cYearAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cYearINTTerminalRuleCall_0_0 = (RuleCall)cYearAssignment_0.eContents().get(0);
		private final Keyword cSolidusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMonthAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMonthINTTerminalRuleCall_2_0 = (RuleCall)cMonthAssignment_2.eContents().get(0);
		private final Keyword cSolidusKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDayAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDayINTTerminalRuleCall_4_0 = (RuleCall)cDayAssignment_4.eContents().get(0);
		
		//Date:
		//	year=INT '/' month=INT '/' day=INT;
		@Override public ParserRule getRule() { return rule; }
		
		//year=INT '/' month=INT '/' day=INT
		public Group getGroup() { return cGroup; }
		
		//year=INT
		public Assignment getYearAssignment_0() { return cYearAssignment_0; }
		
		//INT
		public RuleCall getYearINTTerminalRuleCall_0_0() { return cYearINTTerminalRuleCall_0_0; }
		
		//'/'
		public Keyword getSolidusKeyword_1() { return cSolidusKeyword_1; }
		
		//month=INT
		public Assignment getMonthAssignment_2() { return cMonthAssignment_2; }
		
		//INT
		public RuleCall getMonthINTTerminalRuleCall_2_0() { return cMonthINTTerminalRuleCall_2_0; }
		
		//'/'
		public Keyword getSolidusKeyword_3() { return cSolidusKeyword_3; }
		
		//day=INT
		public Assignment getDayAssignment_4() { return cDayAssignment_4; }
		
		//INT
		public RuleCall getDayINTTerminalRuleCall_4_0() { return cDayINTTerminalRuleCall_4_0; }
	}
	
	
	private final BankSystemElements pBankSystem;
	private final BankElements pBank;
	private final UserElements pUser;
	private final BranchElements pBranch;
	private final BoothElements pBooth;
	private final VaultElements pVault;
	private final EmployeeElements pEmployee;
	private final EmployeeRoleElements pEmployeeRole;
	private final TellerElements pTeller;
	private final ManagerElements pManager;
	private final AccountElements pAccount;
	private final AccountTypeElements pAccountType;
	private final SavingsAccountElements pSavingsAccount;
	private final CheckingAccountElements pCheckingAccount;
	private final MortgageAccountElements pMortgageAccount;
	private final TransactionElements pTransaction;
	private final BooleanElements pBoolean;
	private final DateElements pDate;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public BankSystemGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pBankSystem = new BankSystemElements();
		this.pBank = new BankElements();
		this.pUser = new UserElements();
		this.pBranch = new BranchElements();
		this.pBooth = new BoothElements();
		this.pVault = new VaultElements();
		this.pEmployee = new EmployeeElements();
		this.pEmployeeRole = new EmployeeRoleElements();
		this.pTeller = new TellerElements();
		this.pManager = new ManagerElements();
		this.pAccount = new AccountElements();
		this.pAccountType = new AccountTypeElements();
		this.pSavingsAccount = new SavingsAccountElements();
		this.pCheckingAccount = new CheckingAccountElements();
		this.pMortgageAccount = new MortgageAccountElements();
		this.pTransaction = new TransactionElements();
		this.pBoolean = new BooleanElements();
		this.pDate = new DateElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.BankSystem".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//BankSystem:
	//	banks+=Bank+
	//	users+=User+;
	public BankSystemElements getBankSystemAccess() {
		return pBankSystem;
	}
	
	public ParserRule getBankSystemRule() {
		return getBankSystemAccess().getRule();
	}
	
	//Bank:
	//	'Bank' name=ID
	//	'{'
	//	'Country' countryOfOrigin=STRING
	//	branches+=Branch+
	//	accounts+=Account*
	//	transactions+=Transaction*
	//	'}';
	public BankElements getBankAccess() {
		return pBank;
	}
	
	public ParserRule getBankRule() {
		return getBankAccess().getRule();
	}
	
	//User:
	//	'User' '{'
	//	'Name' name=ID
	//	'Email' email=STRING
	//	'HashPass' hashpass=STRING
	//	'Address' address=STRING
	//	'}';
	public UserElements getUserAccess() {
		return pUser;
	}
	
	public ParserRule getUserRule() {
		return getUserAccess().getRule();
	}
	
	//Branch:
	//	'Branch{'
	//	'Address' address=STRING
	//	mybooth=Booth?
	//	myVault=Vault?
	//	employees+=Employee+
	//	'}';
	public BranchElements getBranchAccess() {
		return pBranch;
	}
	
	public ParserRule getBranchRule() {
		return getBranchAccess().getRule();
	}
	
	//Booth:
	//	'Booth';
	public BoothElements getBoothAccess() {
		return pBooth;
	}
	
	public ParserRule getBoothRule() {
		return getBoothAccess().getRule();
	}
	
	//Vault:
	//	'Vault';
	public VaultElements getVaultAccess() {
		return pVault;
	}
	
	public ParserRule getVaultRule() {
		return getVaultAccess().getRule();
	}
	
	//Employee:
	//	'Employee' name=ID '{'
	//	'Hiring date' date=Date
	//	'Salary' salary=INT
	//	'Current Role' currentRole=EmployeeRole
	//	'}';
	public EmployeeElements getEmployeeAccess() {
		return pEmployee;
	}
	
	public ParserRule getEmployeeRule() {
		return getEmployeeAccess().getRule();
	}
	
	//EmployeeRole:
	//	Teller | Manager;
	public EmployeeRoleElements getEmployeeRoleAccess() {
		return pEmployeeRole;
	}
	
	public ParserRule getEmployeeRoleRule() {
		return getEmployeeRoleAccess().getRule();
	}
	
	//Teller:
	//	'Teller';
	public TellerElements getTellerAccess() {
		return pTeller;
	}
	
	public ParserRule getTellerRule() {
		return getTellerAccess().getRule();
	}
	
	//Manager:
	//	'Manager';
	public ManagerElements getManagerAccess() {
		return pManager;
	}
	
	public ParserRule getManagerRule() {
		return getManagerAccess().getRule();
	}
	
	//Account:
	//	'account' accountNum=ID '{'
	//	'Holder(s)' holder=ID
	//	'Balance' balance=INT
	//	'Account Number'
	//	'MFA Type' mfaType=STRING
	//	'Type' accountType=AccountType ('Interest rate' intRate=INT)? ('Debits per month' depPerMonth=INT)? ('Loan period'
	//	loanPeriod=STRING)?
	//	'}';
	public AccountElements getAccountAccess() {
		return pAccount;
	}
	
	public ParserRule getAccountRule() {
		return getAccountAccess().getRule();
	}
	
	//AccountType:
	//	SavingsAccount | CheckingAccount | MortgageAccount;
	public AccountTypeElements getAccountTypeAccess() {
		return pAccountType;
	}
	
	public ParserRule getAccountTypeRule() {
		return getAccountTypeAccess().getRule();
	}
	
	//SavingsAccount:
	//	'Savings Account';
	public SavingsAccountElements getSavingsAccountAccess() {
		return pSavingsAccount;
	}
	
	public ParserRule getSavingsAccountRule() {
		return getSavingsAccountAccess().getRule();
	}
	
	//CheckingAccount:
	//	'Checking Account';
	public CheckingAccountElements getCheckingAccountAccess() {
		return pCheckingAccount;
	}
	
	public ParserRule getCheckingAccountRule() {
		return getCheckingAccountAccess().getRule();
	}
	
	//MortgageAccount:
	//	'Mortgage Account';
	public MortgageAccountElements getMortgageAccountAccess() {
		return pMortgageAccount;
	}
	
	public ParserRule getMortgageAccountRule() {
		return getMortgageAccountAccess().getRule();
	}
	
	//Transaction:
	//	'transaction {'
	//	'Account:' account=ID
	//	'Amount:' amount=INT
	//	'Date' date=Date
	//	'Debit' debit=Boolean
	//	'Vendor name' vendorName=STRING
	//	'}';
	public TransactionElements getTransactionAccess() {
		return pTransaction;
	}
	
	public ParserRule getTransactionRule() {
		return getTransactionAccess().getRule();
	}
	
	//Boolean:
	//	'true' | 'false';
	public BooleanElements getBooleanAccess() {
		return pBoolean;
	}
	
	public ParserRule getBooleanRule() {
		return getBooleanAccess().getRule();
	}
	
	//Date:
	//	year=INT '/' month=INT '/' day=INT;
	public DateElements getDateAccess() {
		return pDate;
	}
	
	public ParserRule getDateRule() {
		return getDateAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
