/*
 * generated by Xtext 2.14.0
 */
grammar InternalBankSystem;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.BankSystemGrammarAccess;

}

@parser::members {

 	private BankSystemGrammarAccess grammarAccess;

    public InternalBankSystemParser(TokenStream input, BankSystemGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "BankSystem";
   	}

   	@Override
   	protected BankSystemGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleBankSystem
entryRuleBankSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBankSystemRule()); }
	iv_ruleBankSystem=ruleBankSystem
	{ $current=$iv_ruleBankSystem.current; }
	EOF;

// Rule BankSystem
ruleBankSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBankSystemAccess().getBanksBankParserRuleCall_0_0());
				}
				lv_banks_0_0=ruleBank
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBankSystemRule());
					}
					add(
						$current,
						"banks",
						lv_banks_0_0,
						"org.xtext.BankSystem.Bank");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getBankSystemAccess().getUsersUserParserRuleCall_1_0());
				}
				lv_users_1_0=ruleUser
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBankSystemRule());
					}
					add(
						$current,
						"users",
						lv_users_1_0,
						"org.xtext.BankSystem.User");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleBank
entryRuleBank returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBankRule()); }
	iv_ruleBank=ruleBank
	{ $current=$iv_ruleBank.current; }
	EOF;

// Rule Bank
ruleBank returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Bank'
		{
			newLeafNode(otherlv_0, grammarAccess.getBankAccess().getBankKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBankAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBankRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBankAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='Country'
		{
			newLeafNode(otherlv_3, grammarAccess.getBankAccess().getCountryKeyword_3());
		}
		(
			(
				lv_countryOfOrigin_4_0=RULE_STRING
				{
					newLeafNode(lv_countryOfOrigin_4_0, grammarAccess.getBankAccess().getCountryOfOriginSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBankRule());
					}
					setWithLastConsumed(
						$current,
						"countryOfOrigin",
						lv_countryOfOrigin_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBankAccess().getBranchesBranchParserRuleCall_5_0());
				}
				lv_branches_5_0=ruleBranch
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBankRule());
					}
					add(
						$current,
						"branches",
						lv_branches_5_0,
						"org.xtext.BankSystem.Branch");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getBankAccess().getAccountsAccountParserRuleCall_6_0());
				}
				lv_accounts_6_0=ruleAccount
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBankRule());
					}
					add(
						$current,
						"accounts",
						lv_accounts_6_0,
						"org.xtext.BankSystem.Account");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getBankAccess().getTransactionsTransactionParserRuleCall_7_0());
				}
				lv_transactions_7_0=ruleTransaction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBankRule());
					}
					add(
						$current,
						"transactions",
						lv_transactions_7_0,
						"org.xtext.BankSystem.Transaction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getBankAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleUser
entryRuleUser returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUserRule()); }
	iv_ruleUser=ruleUser
	{ $current=$iv_ruleUser.current; }
	EOF;

// Rule User
ruleUser returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='User'
		{
			newLeafNode(otherlv_0, grammarAccess.getUserAccess().getUserKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getUserAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='Name'
		{
			newLeafNode(otherlv_2, grammarAccess.getUserAccess().getNameKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getUserAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='Email'
		{
			newLeafNode(otherlv_4, grammarAccess.getUserAccess().getEmailKeyword_4());
		}
		(
			(
				lv_email_5_0=RULE_STRING
				{
					newLeafNode(lv_email_5_0, grammarAccess.getUserAccess().getEmailSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserRule());
					}
					setWithLastConsumed(
						$current,
						"email",
						lv_email_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6='HashPass'
		{
			newLeafNode(otherlv_6, grammarAccess.getUserAccess().getHashPassKeyword_6());
		}
		(
			(
				lv_hashpass_7_0=RULE_STRING
				{
					newLeafNode(lv_hashpass_7_0, grammarAccess.getUserAccess().getHashpassSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserRule());
					}
					setWithLastConsumed(
						$current,
						"hashpass",
						lv_hashpass_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8='Address'
		{
			newLeafNode(otherlv_8, grammarAccess.getUserAccess().getAddressKeyword_8());
		}
		(
			(
				lv_address_9_0=RULE_STRING
				{
					newLeafNode(lv_address_9_0, grammarAccess.getUserAccess().getAddressSTRINGTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserRule());
					}
					setWithLastConsumed(
						$current,
						"address",
						lv_address_9_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getUserAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleBranch
entryRuleBranch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBranchRule()); }
	iv_ruleBranch=ruleBranch
	{ $current=$iv_ruleBranch.current; }
	EOF;

// Rule Branch
ruleBranch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Branch{'
		{
			newLeafNode(otherlv_0, grammarAccess.getBranchAccess().getBranchKeyword_0());
		}
		otherlv_1='Address'
		{
			newLeafNode(otherlv_1, grammarAccess.getBranchAccess().getAddressKeyword_1());
		}
		(
			(
				lv_address_2_0=RULE_STRING
				{
					newLeafNode(lv_address_2_0, grammarAccess.getBranchAccess().getAddressSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBranchRule());
					}
					setWithLastConsumed(
						$current,
						"address",
						lv_address_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			{
				newCompositeNode(grammarAccess.getBranchAccess().getBoothParserRuleCall_3());
			}
			ruleBooth
			{
				afterParserOrEnumRuleCall();
			}
		)?
		(
			{
				newCompositeNode(grammarAccess.getBranchAccess().getVaultParserRuleCall_4());
			}
			ruleVault
			{
				afterParserOrEnumRuleCall();
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBranchAccess().getEmployeesEmployeeParserRuleCall_5_0());
				}
				lv_employees_5_0=ruleEmployee
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBranchRule());
					}
					add(
						$current,
						"employees",
						lv_employees_5_0,
						"org.xtext.BankSystem.Employee");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getBranchAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleBooth
entryRuleBooth returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBoothRule()); }
	iv_ruleBooth=ruleBooth
	{ $current=$iv_ruleBooth.current.getText(); }
	EOF;

// Rule Booth
ruleBooth returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='Booth'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getBoothAccess().getBoothKeyword());
	}
;

// Entry rule entryRuleVault
entryRuleVault returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVaultRule()); }
	iv_ruleVault=ruleVault
	{ $current=$iv_ruleVault.current.getText(); }
	EOF;

// Rule Vault
ruleVault returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='Vault'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getVaultAccess().getVaultKeyword());
	}
;

// Entry rule entryRuleEmployee
entryRuleEmployee returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmployeeRule()); }
	iv_ruleEmployee=ruleEmployee
	{ $current=$iv_ruleEmployee.current; }
	EOF;

// Rule Employee
ruleEmployee returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Employee'
		{
			newLeafNode(otherlv_0, grammarAccess.getEmployeeAccess().getEmployeeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEmployeeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEmployeeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEmployeeAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='Hiring date'
		{
			newLeafNode(otherlv_3, grammarAccess.getEmployeeAccess().getHiringDateKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEmployeeAccess().getDateDateParserRuleCall_4_0());
				}
				lv_date_4_0=ruleDate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEmployeeRule());
					}
					set(
						$current,
						"date",
						lv_date_4_0,
						"org.xtext.BankSystem.Date");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='Salary'
		{
			newLeafNode(otherlv_5, grammarAccess.getEmployeeAccess().getSalaryKeyword_5());
		}
		(
			(
				lv_salary_6_0=RULE_INT
				{
					newLeafNode(lv_salary_6_0, grammarAccess.getEmployeeAccess().getSalaryINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEmployeeRule());
					}
					setWithLastConsumed(
						$current,
						"salary",
						lv_salary_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_7='Current Role'
		{
			newLeafNode(otherlv_7, grammarAccess.getEmployeeAccess().getCurrentRoleKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEmployeeAccess().getCurrentRoleEmployeeRoleParserRuleCall_8_0());
				}
				lv_currentRole_8_0=ruleEmployeeRole
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEmployeeRule());
					}
					set(
						$current,
						"currentRole",
						lv_currentRole_8_0,
						"org.xtext.BankSystem.EmployeeRole");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getEmployeeAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleEmployeeRole
entryRuleEmployeeRole returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEmployeeRoleRule()); }
	iv_ruleEmployeeRole=ruleEmployeeRole
	{ $current=$iv_ruleEmployeeRole.current.getText(); }
	EOF;

// Rule EmployeeRole
ruleEmployeeRole returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEmployeeRoleAccess().getTellerParserRuleCall_0());
		}
		this_Teller_0=ruleTeller
		{
			$current.merge(this_Teller_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEmployeeRoleAccess().getManagerParserRuleCall_1());
		}
		this_Manager_1=ruleManager
		{
			$current.merge(this_Manager_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTeller
entryRuleTeller returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTellerRule()); }
	iv_ruleTeller=ruleTeller
	{ $current=$iv_ruleTeller.current.getText(); }
	EOF;

// Rule Teller
ruleTeller returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='Teller'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getTellerAccess().getTellerKeyword());
	}
;

// Entry rule entryRuleManager
entryRuleManager returns [String current=null]:
	{ newCompositeNode(grammarAccess.getManagerRule()); }
	iv_ruleManager=ruleManager
	{ $current=$iv_ruleManager.current.getText(); }
	EOF;

// Rule Manager
ruleManager returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='Manager'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getManagerAccess().getManagerKeyword());
	}
;

// Entry rule entryRuleAccount
entryRuleAccount returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAccountRule()); }
	iv_ruleAccount=ruleAccount
	{ $current=$iv_ruleAccount.current; }
	EOF;

// Rule Account
ruleAccount returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getAccountAccess().getSavingsAccountParserRuleCall_0_0());
			}
			this_SavingsAccount_0=ruleSavingsAccount
			{
				$current = $this_SavingsAccount_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getAccountAccess().getCheckingAccountParserRuleCall_0_1());
			}
			this_CheckingAccount_1=ruleCheckingAccount
			{
				$current = $this_CheckingAccount_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getAccountAccess().getMortgageAccountParserRuleCall_0_2());
			}
			this_MortgageAccount_2=ruleMortgageAccount
			{
				$current = $this_MortgageAccount_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_3='Holder(s)'
		{
			newLeafNode(otherlv_3, grammarAccess.getAccountAccess().getHolderSKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAccountAccess().getHolderUserParserRuleCall_2_0());
				}
				lv_holder_4_0=ruleUser
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAccountRule());
					}
					set(
						$current,
						"holder",
						lv_holder_4_0,
						"org.xtext.BankSystem.User");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='Balance'
		{
			newLeafNode(otherlv_5, grammarAccess.getAccountAccess().getBalanceKeyword_3());
		}
		(
			(
				lv_balance_6_0=RULE_INT
				{
					newLeafNode(lv_balance_6_0, grammarAccess.getAccountAccess().getBalanceINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAccountRule());
					}
					setWithLastConsumed(
						$current,
						"balance",
						lv_balance_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_7='Account Number'
		{
			newLeafNode(otherlv_7, grammarAccess.getAccountAccess().getAccountNumberKeyword_5());
		}
		(
			(
				lv_accountNum_8_0=RULE_ID
				{
					newLeafNode(lv_accountNum_8_0, grammarAccess.getAccountAccess().getAccountNumIDTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAccountRule());
					}
					setWithLastConsumed(
						$current,
						"accountNum",
						lv_accountNum_8_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_9='MFA Type'
		{
			newLeafNode(otherlv_9, grammarAccess.getAccountAccess().getMFATypeKeyword_7());
		}
		(
			(
				lv_mfaType_10_0=RULE_STRING
				{
					newLeafNode(lv_mfaType_10_0, grammarAccess.getAccountAccess().getMfaTypeSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAccountRule());
					}
					setWithLastConsumed(
						$current,
						"mfaType",
						lv_mfaType_10_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getAccountAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleSavingsAccount
entryRuleSavingsAccount returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSavingsAccountRule()); }
	iv_ruleSavingsAccount=ruleSavingsAccount
	{ $current=$iv_ruleSavingsAccount.current; }
	EOF;

// Rule SavingsAccount
ruleSavingsAccount returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Savings Account {'
		{
			newLeafNode(otherlv_0, grammarAccess.getSavingsAccountAccess().getSavingsAccountKeyword_0());
		}
		otherlv_1='Interest rate'
		{
			newLeafNode(otherlv_1, grammarAccess.getSavingsAccountAccess().getInterestRateKeyword_1());
		}
		(
			(
				lv_intRate_2_0=RULE_INT
				{
					newLeafNode(lv_intRate_2_0, grammarAccess.getSavingsAccountAccess().getIntRateINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSavingsAccountRule());
					}
					setWithLastConsumed(
						$current,
						"intRate",
						lv_intRate_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleCheckingAccount
entryRuleCheckingAccount returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCheckingAccountRule()); }
	iv_ruleCheckingAccount=ruleCheckingAccount
	{ $current=$iv_ruleCheckingAccount.current; }
	EOF;

// Rule CheckingAccount
ruleCheckingAccount returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Checking Account {'
		{
			newLeafNode(otherlv_0, grammarAccess.getCheckingAccountAccess().getCheckingAccountKeyword_0());
		}
		otherlv_1='Debits per month'
		{
			newLeafNode(otherlv_1, grammarAccess.getCheckingAccountAccess().getDebitsPerMonthKeyword_1());
		}
		(
			(
				lv_depPerMonth_2_0=RULE_INT
				{
					newLeafNode(lv_depPerMonth_2_0, grammarAccess.getCheckingAccountAccess().getDepPerMonthINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCheckingAccountRule());
					}
					setWithLastConsumed(
						$current,
						"depPerMonth",
						lv_depPerMonth_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleMortgageAccount
entryRuleMortgageAccount returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMortgageAccountRule()); }
	iv_ruleMortgageAccount=ruleMortgageAccount
	{ $current=$iv_ruleMortgageAccount.current; }
	EOF;

// Rule MortgageAccount
ruleMortgageAccount returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Mortgage Account {'
		{
			newLeafNode(otherlv_0, grammarAccess.getMortgageAccountAccess().getMortgageAccountKeyword_0());
		}
		otherlv_1='Loan period'
		{
			newLeafNode(otherlv_1, grammarAccess.getMortgageAccountAccess().getLoanPeriodKeyword_1());
		}
		(
			(
				lv_loanPeriod_2_0=RULE_STRING
				{
					newLeafNode(lv_loanPeriod_2_0, grammarAccess.getMortgageAccountAccess().getLoanPeriodSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMortgageAccountRule());
					}
					setWithLastConsumed(
						$current,
						"loanPeriod",
						lv_loanPeriod_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleTransaction
entryRuleTransaction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransactionRule()); }
	iv_ruleTransaction=ruleTransaction
	{ $current=$iv_ruleTransaction.current; }
	EOF;

// Rule Transaction
ruleTransaction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='transaction {'
		{
			newLeafNode(otherlv_0, grammarAccess.getTransactionAccess().getTransactionKeyword_0());
		}
		otherlv_1='Account:'
		{
			newLeafNode(otherlv_1, grammarAccess.getTransactionAccess().getAccountKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransactionAccess().getAccountAccountParserRuleCall_2_0());
				}
				lv_account_2_0=ruleAccount
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransactionRule());
					}
					set(
						$current,
						"account",
						lv_account_2_0,
						"org.xtext.BankSystem.Account");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='Amount:'
		{
			newLeafNode(otherlv_3, grammarAccess.getTransactionAccess().getAmountKeyword_3());
		}
		(
			(
				lv_amount_4_0=RULE_INT
				{
					newLeafNode(lv_amount_4_0, grammarAccess.getTransactionAccess().getAmountINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransactionRule());
					}
					setWithLastConsumed(
						$current,
						"amount",
						lv_amount_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='Date'
		{
			newLeafNode(otherlv_5, grammarAccess.getTransactionAccess().getDateKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransactionAccess().getDateDateParserRuleCall_6_0());
				}
				lv_date_6_0=ruleDate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransactionRule());
					}
					set(
						$current,
						"date",
						lv_date_6_0,
						"org.xtext.BankSystem.Date");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='Debit'
		{
			newLeafNode(otherlv_7, grammarAccess.getTransactionAccess().getDebitKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransactionAccess().getDebitBooleanParserRuleCall_8_0());
				}
				lv_debit_8_0=ruleBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransactionRule());
					}
					set(
						$current,
						"debit",
						lv_debit_8_0,
						"org.xtext.BankSystem.Boolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='Vendor name'
		{
			newLeafNode(otherlv_9, grammarAccess.getTransactionAccess().getVendorNameKeyword_9());
		}
		(
			(
				lv_vendorName_10_0=RULE_STRING
				{
					newLeafNode(lv_vendorName_10_0, grammarAccess.getTransactionAccess().getVendorNameSTRINGTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransactionRule());
					}
					setWithLastConsumed(
						$current,
						"vendorName",
						lv_vendorName_10_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getTransactionAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleBoolean
entryRuleBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBooleanRule()); }
	iv_ruleBoolean=ruleBoolean
	{ $current=$iv_ruleBoolean.current.getText(); }
	EOF;

// Rule Boolean
ruleBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleDate
entryRuleDate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDateRule()); }
	iv_ruleDate=ruleDate
	{ $current=$iv_ruleDate.current; }
	EOF;

// Rule Date
ruleDate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_year_0_0=RULE_INT
				{
					newLeafNode(lv_year_0_0, grammarAccess.getDateAccess().getYearINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed(
						$current,
						"year",
						lv_year_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_1='/'
		{
			newLeafNode(otherlv_1, grammarAccess.getDateAccess().getSolidusKeyword_1());
		}
		(
			(
				lv_month_2_0=RULE_INT
				{
					newLeafNode(lv_month_2_0, grammarAccess.getDateAccess().getMonthINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed(
						$current,
						"month",
						lv_month_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='/'
		{
			newLeafNode(otherlv_3, grammarAccess.getDateAccess().getSolidusKeyword_3());
		}
		(
			(
				lv_day_4_0=RULE_INT
				{
					newLeafNode(lv_day_4_0, grammarAccess.getDateAccess().getDayINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed(
						$current,
						"day",
						lv_day_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
